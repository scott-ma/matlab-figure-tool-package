%!PS-Adobe-3.0 EPSF-3.0
%%Creator: MATLAB, The Mathworks, Inc.
%%Title: fig1.eps
%%CreationDate: 10/16/2010  19:17:17
%%DocumentNeededFonts: Helvetica
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox:    45    39   272   238
%%EndComments

%%BeginProlog
% MathWorks dictionary
/MathWorks 160 dict begin
% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef
% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rm /rmoveto ldef
/rl /rlineto ldef
/s {show newpath} bdef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef
% orientation switch
/portraitMode 0 def /landscapeMode 1 def /rotateMode 2 def
% coordinate system mappings
/dpi2point 0 def
% font control
/FontSize 0 def
/FMS {/FontSize xstore findfont [FontSize 0 0 FontSize neg 0 0]
  makefont setfont} bdef
/ISOLatin1Encoding where {pop /WindowsLatin1Encoding 256 array bdef
ISOLatin1Encoding WindowsLatin1Encoding copy pop
/.notdef/.notdef/quotesinglbase/florin/quotedblbase/ellipsis/dagger
/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE/.notdef/.notdef
/.notdef/.notdef/quoteleft/quoteright/quotedblleft/quotedblright/bullet
/endash/emdash/tilde/trademark/scaron/guilsinglright/oe/.notdef/.notdef
/Ydieresis WindowsLatin1Encoding 128 32 getinterval astore pop}
{/WindowsLatin1Encoding StandardEncoding bdef} ifelse
/reencode {exch dup where {pop load} {pop StandardEncoding} ifelse
  exch dup 3 1 roll findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def currentdict end definefont pop} bdef
/isroman {findfont /CharStrings get /Agrave known} bdef
/FMSR {3 1 roll 1 index dup isroman {reencode} {pop pop} ifelse
  exch FMS} bdef
/csm {1 dpi2point div -1 dpi2point div scale neg translate
 dup landscapeMode eq {pop -90 rotate}
  {rotateMode eq {90 rotate} if} ifelse} bdef
% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [ 1.5 dpi2point mul 2 dpi2point mul] 0 setdash} bdef
/DA { [ 5 dpi2point mul 2 dpi2point mul] 0 setdash} bdef
/DD { [ 1 dpi2point mul 2 dpi2point mul 4 dpi2point mul 2
  dpi2point mul] 0 setdash } bdef
% macros for lines and objects
/L {lineto stroke} bdef
/MP {3 1 roll moveto 1 sub {rlineto} repeat} bdef
/AP {{rlineto} repeat} bdef
/PDlw -1 def
/W {/PDlw currentlinewidth def setlinewidth} def
/PP {closepath eofill} bdef
/DP {closepath stroke} bdef
/MR {4 -2 roll moveto dup  0 exch rlineto exch 0 rlineto
  neg 0 exch rlineto closepath} bdef
/FR {MR stroke} bdef
/PR {MR fill} bdef
/L1i {{currentfile picstr readhexstring pop} image} bdef
/tMatrix matrix def
/MakeOval {newpath tMatrix currentmatrix pop translate scale
0 0 1 0 360 arc tMatrix setmatrix} bdef
/FO {MakeOval stroke} bdef
/PO {MakeOval fill} bdef
/PD {currentlinewidth 2 div 0 360 arc fill
   PDlw -1 eq not {PDlw w /PDlw -1 def} if} def
/FA {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arc tMatrix setmatrix stroke} bdef
/PA {newpath tMatrix currentmatrix pop	translate 0 0 moveto scale
  0 0 1 5 -2 roll arc closepath tMatrix setmatrix fill} bdef
/FAn {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arcn tMatrix setmatrix stroke} bdef
/PAn {newpath tMatrix currentmatrix pop translate 0 0 moveto scale
  0 0 1 5 -2 roll arcn closepath tMatrix setmatrix fill} bdef
/vradius 0 def /hradius 0 def /lry 0 def
/lrx 0 def /uly 0 def /ulx 0 def /rad 0 def
/MRR {/vradius xdef /hradius xdef /lry xdef /lrx xdef /uly xdef
  /ulx xdef newpath tMatrix currentmatrix pop ulx hradius add uly
  vradius add translate hradius vradius scale 0 0 1 180 270 arc 
  tMatrix setmatrix lrx hradius sub uly vradius add translate
  hradius vradius scale 0 0 1 270 360 arc tMatrix setmatrix
  lrx hradius sub lry vradius sub translate hradius vradius scale
  0 0 1 0 90 arc tMatrix setmatrix ulx hradius add lry vradius sub
  translate hradius vradius scale 0 0 1 90 180 arc tMatrix setmatrix
  closepath} bdef
/FRR {MRR stroke } bdef
/PRR {MRR fill } bdef
/MlrRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lry uly sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 90 270 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 270 90 arc tMatrix setmatrix
  closepath} bdef
/FlrRR {MlrRR stroke } bdef
/PlrRR {MlrRR fill } bdef
/MtbRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lrx ulx sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 180 360 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 0 180 arc tMatrix setmatrix
  closepath} bdef
/FtbRR {MtbRR stroke } bdef
/PtbRR {MtbRR fill } bdef
/stri 6 array def /dtri 6 array def
/smat 6 array def /dmat 6 array def
/tmat1 6 array def /tmat2 6 array def /dif 3 array def
/asub {/ind2 exch def /ind1 exch def dup dup
  ind1 get exch ind2 get sub exch } bdef
/tri_to_matrix {
  2 0 asub 3 1 asub 4 0 asub 5 1 asub
  dup 0 get exch 1 get 7 -1 roll astore } bdef
/compute_transform {
  dmat dtri tri_to_matrix tmat1 invertmatrix 
  smat stri tri_to_matrix tmat2 concatmatrix } bdef
/ds {stri astore pop} bdef
/dt {dtri astore pop} bdef
/db {2 copy /cols xdef /rows xdef mul dup 3 mul string
  currentfile 
  3 index 0 eq {/ASCIIHexDecode filter}
  {/ASCII85Decode filter 3 index 2 eq {/RunLengthDecode filter} if }
  ifelse exch readstring pop
  dup 0 3 index getinterval /rbmap xdef
  dup 2 index dup getinterval /gbmap xdef
  1 index dup 2 mul exch getinterval /bbmap xdef pop pop}bdef
/it {gs np dtri aload pop moveto lineto lineto cp c
  cols rows 8 compute_transform 
  rbmap gbmap bbmap true 3 colorimage gr}bdef
/il {newpath moveto lineto stroke}bdef
currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:    45    39   272   238
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: obj1
bplot

/dpi2point 4.16667 def
portraitMode 0187 0991 csm

    0     0   946   828 rc
86 dict begin %Colortable dictionary
/c0 { 0 0 0 sr} bdef
/c1 { 1 1 1 sr} bdef
/c2 { 1 0 0 sr} bdef
/c3 { 0 1 0 sr} bdef
/c4 { 0 0 1 sr} bdef
/c5 { 1 1 0 sr} bdef
/c6 { 1 0 1 sr} bdef
/c7 { 0 1 1 sr} bdef
c0
1 j
1 sg
   0    0  947  829 rf
2.08333 w
0 708 814 0 0 -708 122 719 4 MP
PP
-814 0 0 708 814 0 0 -708 122 719 5 MP stroke
1.38889 w
DO
SO
2.08333 w
0 sg
 122   11 mt  936   11 L
 122  719 mt  936  719 L
 936  719 mt  936   11 L
 122  719 mt  122   11 L
 122  719 mt  936  719 L
 122  719 mt  122   11 L
 122  719 mt  122  702 L
 122   11 mt  122   27 L
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 33.3333 FMSR

 109  762 mt 
( 0) s
 253  719 mt  253  702 L
 253   11 mt  253   27 L
 235  762 mt 
(10) s
 384  719 mt  384  702 L
 384   11 mt  384   27 L
 366  762 mt 
(20) s
 515  719 mt  515  702 L
 515   11 mt  515   27 L
 497  762 mt 
(30) s
 647  719 mt  647  702 L
 647   11 mt  647   27 L
 629  762 mt 
(40) s
 778  719 mt  778  702 L
 778   11 mt  778   27 L
 760  762 mt 
(50) s
 909  719 mt  909  702 L
 909   11 mt  909   27 L
 891  762 mt 
(60) s
 122  719 mt  138  719 L
 936  719 mt  919  719 L
  73  731 mt 
(  0) s
 122  582 mt  138  582 L
 936  582 mt  919  582 L
  64  594 mt 
( 50) s
 122  446 mt  138  446 L
 936  446 mt  919  446 L
  55  458 mt 
(100) s
 122  310 mt  138  310 L
 936  310 mt  919  310 L
  55  322 mt 
(150) s
 122  174 mt  138  174 L
 936  174 mt  919  174 L
  55  186 mt 
(200) s
 122   38 mt  138   38 L
 936   38 mt  919   38 L
  55   50 mt 
(250) s
 122   11 mt  936   11 L
 122  719 mt  936  719 L
 936  719 mt  936   11 L
 122  719 mt  122   11 L
gs 122 11 815 709 rc
3.33333 w
39 -8 40 -8 39 -9 39 -8 40 -8 39 -8 39 -8 40 -8 
39 -9 40 -8 39 -8 39 -8 40 -8 39 -8 40 -9 39 -8 
39 -8 40 -8 39 -8 39 -9 122 719 21 MP stroke
DA
/c8 { 0.000000 0.000000 1.000000 sr} bdef
c8
39 -33 40 -32 39 -33 39 -33 40 -32 39 -33 39 -33 40 -32 
39 -33 40 -33 39 -32 39 -33 40 -33 39 -32 40 -33 39 -33 
39 -32 40 -33 39 -33 39 -33 122 719 21 MP stroke
DO
/c9 { 1.000000 0.000000 0.000000 sr} bdef
c9
39 -16 40 -16 39 -17 39 -16 40 -16 39 -17 39 -16 40 -16 
39 -17 40 -16 39 -16 39 -17 40 -16 39 -16 40 -17 39 -16 
39 -16 40 -17 39 -16 39 -17 122 719 21 MP stroke
DD
/c10 { 0.000000 1.000000 0.000000 sr} bdef
c10
39 -8 40 -8 39 -9 39 -8 40 -8 39 -8 39 -8 40 -8 
39 -9 40 -8 39 -8 39 -8 40 -8 39 -8 40 -9 39 -8 
39 -8 40 -8 39 -8 39 -9 122 719 21 MP stroke
gr

3.33333 w
c10
DD
0 sg
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 37.5 FMSR

 455  813 mt 
(Time \(s\)) s
  34  490 mt  -90 rotate
(Arc current \(A\)) s
90 rotate
SO
2.08333 w
gs 164 214 606 113 rc
3.33333 w
67 0 188 235 2 MP stroke
gr

3.33333 w
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 29.1667 FMSR

 271  246 mt 
(No) s
gs 164 214 606 113 rc
DD
c10
67 0 417 235 2 MP stroke
SO
gr

c10
0 sg
 500  246 mt 
(But this is OK!) s
gs 164 214 606 113 rc
DA
c8
67 0 188 270 2 MP stroke
SO
gr

c8
0 sg
 271  281 mt 
(Just go out) s
gs 164 214 606 113 rc
DO
c9
67 0 188 304 2 MP stroke
SO
gr

c9
0 sg
 271  315 mt 
(Yes) s
2.08333 w

end

eplot
%%EndObject

epage
end

showpage

%%Trailer
%%EOF
